<project name="IguanaTweaks" default="main">
    <property environment="env"/>
    <!-- Properties -->

    <property name="project.name" value="IguanaTweaks"/>
    <property name="mod.name" value="iguanatweaks"/>
	
    <property name="build.dir" value="build"/>
    <property name="src.dir" value="src"/>
    <property name="resources.dir" value="resources"/>

    <property name="download.dir" value="download"/>

    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="bin"/>

    <property name="mc.version" value="1.6.4"/>
    <property name="forge.version" value="9.11.1.916"/>

    <property name="forge.dir" value="../../minecraftforge-src-${mc.version}-${forge.version}/forge"/>
    <property name="mcp.dir" value="${forge.dir}/mcp"/>

    <property name="mcpsrc.dir" value="${mcp.dir}/src"/>

    <property name="version.major" value="0"/>
    <property name="version.minor" value="0"/>

    <available file=".git" type="dir" property="git.present"/>

    <!-- Clear build directory -->
    <target name="clean">
            <delete dir="${build.dir}"/>
    </target>

    <!-- Set full version -->
    <target name="initialize-version" depends="version-provided,version-not-provided,git-revision">
            <property name="project.version.full" value="${build.number}.${git.revision}"/>
    </target>

    <!-- Set unknown build number -->
    <target name="version-not-provided" unless="env.BUILD_NUMBER">
            <property name="build.number" value="DEV"/>
    </target>

    <!-- Set build number from environment -->
    <target name="version-provided" if="env.BUILD_NUMBER">
            <property name="build.number" value="${env.BUILD_NUMBER}"/>
    </target>

    <target name="git-revision" if="git.present">
            <exec executable="git" dir="." outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
                    <arg value="rev-parse"/>
                    <arg value="--short"/>
                    <arg value="HEAD"/>
            </exec>
            <echo message="Git revision: ${git.revision}"/>
    </target>

    <target name="copy-src">
	        <!-- Copy sources -->
	        <copy todir="${mcpsrc.dir}/minecraft">
	        		<fileset dir="${src.dir}"/>
	        </copy>
    </target>

    <target name="compile" depends="initialize-version,copy-src">

            <delete dir="${classes.dir}"/>
            <mkdir dir="${classes.dir}"/>

            <!-- Recompile -->
            <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
                    <arg line="/c recompile.bat"/>
            </exec>

            <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
                    <arg value="recompile.sh"/>
            </exec>

            <!-- Check for failure -->
            <fail message="MCP failed to build">
                <condition>
                        <resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
                </condition>

                <!-- Reset src dir to post-forge-install state -->
        	    <delete dir="${mcpsrc.dir}/minecraft/${mod.name}"/>
            </fail>

    </target>

    <target name="reobf" depends="compile">

        <!-- Reobfuscate -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
                <arg line="/c reobfuscate_srg.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
                <arg value="reobfuscate_srg.sh"/>
        </exec>

       	<!-- Copy classes -->
    	<mkdir dir="${classes.dir}/${mod.name}"/>
        <copy todir="${classes.dir}/${mod.name}">
        	<fileset dir="${mcp.dir}/reobf/minecraft/${mod.name}"/>
        </copy>

        <!-- Copy resources -->
        <copy todir="${classes.dir}" outputencoding="UTF-8">
                <fileset dir="${classes.dir}"/>
        </copy>
    	
        <copy file="${resources.dir}/mcmod.info" todir="${classes.dir}" outputencoding="UTF-8">
                <filterset>
                        <filter token="VERSION" value="${project.version.full}" />
                        <filter token="MCVERSION" value="${mc.version}" />
                </filterset>
        </copy>
        <copy todir="${classes.dir}">
                <fileset dir="${resources.dir}">
                        <exclude name="mcmod.info"/>
        <exclude name="PreloaderManifest.mf"/>
                </fileset>
        </copy>

        <!-- Reset src dir to post-forge-install state -->
	    <delete dir="${mcpsrc.dir}/minecraft/${mod.name}"/>
            
    </target>

    <!-- Package the compiled files -->
    <target name="package" depends="reobf">

            <delete dir="${jar.dir}"/>
            <mkdir dir="${jar.dir}"/>
            <jar destfile="${jar.dir}/${project.name}-${mc.version}-${project.version.full}.jar" basedir="${classes.dir}" manifest="${resources.dir}/PreloaderManifest.mf"/>

    </target>

    <!-- Default target to run -->
    <target name="main" depends="package"/>

</project>